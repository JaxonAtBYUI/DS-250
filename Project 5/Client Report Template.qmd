---
title: "The War with Star Wars"
subtitle: "Course DS 250"
author: "Jaxon Hamm"
format:
  html:
    self-contained: true
    page-layout: full
    title-block-banner: "#c4bb00"
    toc: true
    toc-depth: 3
    toc-location: body
    number-sections: false
    html-math-method: katex
    code-fold: true
    code-summary: "Show the code"
    code-overflow: wrap
    code-copy: hover
    code-tools:
        source: false
        toggle: true
        caption: See code
    
---

```{python}
#| label: libraries
#| include: false

import pandas as pd
import altair as alt
import numpy as np

from IPython.display import Markdown
from IPython.display import display
from tabulate import tabulate
```


## Elevator pitch

_paste your elevator pitch here_

```{python}
#| label: project data
#| code-summary: Read and format project data

# Read Data
```

__Highlight the grand questions__

## Initial Data Wrangling

__Shorten the column names and clean them up for easier use with pandas. Provide a table or list that exemplifies how you fixed the names.__

_type your results and analysis here_

```{python}
#| label: GQ1
#| code-summary: Format and Filter Data

# Include and execute your code here


```

_include figures in chunks and discuss your findings in the figure._

```{python}
#| label: GQ1 table
#| code-summary: table example
#| tbl-cap: "Not much of a table"
#| tbl-cap-location: top
# Include and execute your code here
mydat = dat.head(1000)\
    .groupby('year')\
    .sum()\
    .reset_index()\
    .tail(10)\
    .filter(["year", "AK","AR"])

display(mydat)

```


## Data Formating

__Clean and format the data so that it can be used in a machine learning model. As you format the data, you should complete each item listed below. In your final report provide example(s) of the reformatted data with a short description of the changes made.__
1. Filter the dataset to respondents that have seen at least one film.
1. Create a new column that converts the age ranges to a single number. Drop the age range categorical column.
1. Create a new column that converts the education groupings to a single number. Drop the school categorical column
1. Create a new column that converts the income ranges to a single number. Drop the income range categorical column.
1. Create your target (also known as “y” or “label”) column based on the new income range column.
1. One-hot encode all remaining categorical columns

_type your results and analysis here_

```{python}
#| label: GQ2
#| code-summary: Format and Filter Data

# Include and execute your code here
dat = []

```

_include figures in chunks and discuss your findings in the figure._

```{python}
#| label: GQ2 table
#| code-summary: table example
#| tbl-cap: "Not much of a table"
#| tbl-cap-location: top
# Include and execute your code here
mydat = dat.head(1000)\
    .groupby('year')\
    .sum()\
    .reset_index()\
    .tail(10)\
    .filter(["year", "AK","AR"])

display(mydat)

```


## Validate Data

__Validate that the data provided on GitHub lines up with the article by recreating 2 of the visuals from the article.__

_type your results and analysis here_

```{python}
#| label: GQ3
#| code-summary: Format and Filter Data

# Include and execute your code here


```

_include figures in chunks and discuss your findings in the figure._

```{python}
#| label: GQ3 chart 1
#| code-summary: plot example
#| fig-cap: "My useless chart"
#| fig-align: center
# Include and execute your code here
alt.Chart(dat.head(200))\
    .encode(x = "name", y = "AK")\
    .mark_bar()
```


```{python}
#| label: GQ3 chart 2
#| code-summary: plot example
#| fig-cap: "My useless chart"
#| fig-align: center
# Include and execute your code here
alt.Chart(dat.head(200))\
    .encode(x = "name", y = "AK")\
    .mark_bar()
```

## Predict Income

__Build a machine learning model that predicts whether a person makes more than $50k. Describe your model and report the accuracy.__

_type your results and analysis here_

```{python}
#| label: GQ4
#| code-summary: Format and Filter Data

# Include and execute your code here


```